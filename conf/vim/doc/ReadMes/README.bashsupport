README for bash-support.vim (Version 3.4) / December 04 2010

  *  INSTALLATION
  *  RELEASE NOTES 
  *  FILES
  *  ADDITIONAL TIPS

Bash Support implements a bash-IDE for Vim/gVim. It is written to considerably
speed up writing code in a consistent style.  This is done by inserting
complete statements, comments, idioms, and code snippets.  Syntax checking,
running a script, starting a debugger  can be done with a keystroke.  There are
many additional hints and options which can improve speed and comfort when
writing shell scripts. 
 
================================================================================
  INSTALLATION
================================================================================

(1)  LINUX
----------

The subdirectories in the zip archive  bash-support.zip  mirror the directory
structure which is needed below the local installation directory $HOME/.vim/
(find the value of $HOME with ":echo $HOME" from inside Vim).

(1.0) Save the template files in '$HOME/.vim/bash-support/templates/Templates' if
    you have changed any of them.

(1.1) Copy the zip archive bash-support.zip to $HOME/.vim and run

      unzip bash-support.zip

    If you have already an older version of bash-support and you have modified
    the template files you may want to save your templates first and suppress
    overwriting them with

      unzip bash-support.zip  -x *Templates *.template

(1.2) Loading of plugin files must be enabled. If not use

      :filetype plugin on

    This is the minimal content of the file '$HOME/.vimrc'. Create one if there
    is none or use the files in $HOME/.vim/bash-support/rc as a starting point.

(1.3) Set at least some personal details in the file 
    '$HOME/.vim/bash-support/templates/Templates' 
    Here is the minimal personalization (my settings as an example):

      |AUTHOR|    = Dr. Fritz Mehner 
      |AUTHORREF| = fgm
      |EMAIL|     = mehner@fh-swf.de
      |COMPANY|   = FH Südwestfalen, Iserlohn
      |COPYRIGHT| = Copyright (c) |YEAR|, |AUTHOR|

    (Read more about the template system in the plugin documentation)

(1.4) Consider additional settings in the file '$HOME/.vimrc'.  The files
    customization.vimrc and customization.gvimrc are replacements or extensions
    for your .vimrc and .gvimrc.  You may want to use parts of them. The files
    are documented. 


(2)  WINDOWS
------------

The subdirectories in the zip archive  bash-support.zip  mirror the directory
structure which is needed below the local installation directory
$HOME/vimfiles/ (find the value of $HOME with ":echo $HOME" from inside Vim).

(2.0) Save the template files in '$HOME/vimfiles/bash-support/templates/Templates'
    if you have changed any of them.

(2.1) Copy the zip archive bash-support.zip to $HOME/vimfiles and run

      unzip bash-support.zip

		If you have already an older version of bash-support and you have modified
		the template files you may want to save your templates first and suppress
		overwriting them with

      unzip bash-support.zip  -x *Templates *.template

(2.2) Loading of plugin files must be enabled. If not use

      :filetype plugin on

		This is the minimal content of the file '$HOME/_vimrc'. Create one if there
		is none or use the files in $HOME/vimfiles/bash-support/rc as a starting
		point.

(2.3) Set at least some personal details in the file 
    '$HOME/vimfiles/bash-support/templates/Templates' 
    Here is the minimal personalization (my settings as an example):

      |AUTHOR|    = Dr. Fritz Mehner 
      |AUTHORREF| = fgm
      |EMAIL|     = mehner@fh-swf.de
      |COMPANY|   = FH Südwestfalen, Iserlohn
      |COPYRIGHT| = Copyright (c) |YEAR|, |AUTHOR|

    (Read more about the template system in the plugin documentation)

(2.4) Consider additional settings in the file '$HOME/_vimrc'.  The files
    customization.vimrc and customization.gvimrc are replacements or extensions
    for your _vimrc and _gvimrc. You may want to use parts of them.  The files
    are documented. 

There are a lot of features and options which can be used and influenced:

  *  use of template files and tags
  *  using and managing personal code snippets
  *  bash dictionary for keyword completion
  *  removing the root menu
  *  using additional plugins

Restart gVim/Vim generate the help tags 

  :helptags ~/.vim/doc

and look at the bashsupport help with

  :help bashsupport 

             +-----------------------------------------------+
             | +-------------------------------------------+ |
             | |    ** Please read the documentation **    | |
             | |    Actions differ for different modes!    | |
             | +-------------------------------------------+ |
             +-----------------------------------------------+

=======================================================================================
  RELEASE NOTES FOR VERSION 3.4
=======================================================================================
- 2 new hotkeys: \t, \t2 (empty tests)
- Windows: user and system installation.
- Syntax check under Windows.
- Several minor bugsfixed.

=======================================================================================
  OLDER RELEASE NOTES : see file 'ChangeLog'
=======================================================================================

=======================================================================================
  FILES
=======================================================================================

README.bashsupport                  This file.

ftplugin/sh.vim                     A filetype plugin. Defines hotkeys and more.

plugin/bash-support.vim             The bash plugin for Vim/gVim.
bash-support/scripts/wrapper.sh     A wrapper script for the use of an xterm.

doc/bashsupport.txt                 The help file for the local online help. 

bash-support/codesnippets/*         Some code snippets as a starting point.

bash-support/templates/*            bash template files (see bashsupport.txt).

bash-support/wordlists/*            Additional word lists (dictionaries).

-----------------------   -------------------------------------------------------------
-----------------------   The following files and extensions are for convenience only.
                          bash-support.vim will work without them.
                          -------------------------------------------------------------

bash-support/rc/customization.bashrc  Additional settings I use in .bashrc: 
                                      set the prompt P2, P3, P4 (for debugging).

bash-support/rc/customization.vimrc   Additional settings I use in .vimrc: incremental 
                                      search, tabstop, hot keys, font, use of dictionaries, 
                                      ...  The file is commented. Append it to your .vimrc
                                      if you like.

bash-support/rc/customization.gvimrc  Additional settings I use in .gvimrc: hot keys, 
                                      mouse settings, ...  The file is commented. 
                                      Append it to your .gvimrc if you like.

bash-support/doc/*                    Hotkey reference card (PDF), changelog. 


=======================================================================================
  ADDITIONAL TIPS
=======================================================================================

(1) gvim. Toggle 'insert mode' <--> 'normal mode' with the right mouse button
    (see mapping in file customization.gvimrc).

(2) gvim. Use tear off menus and

(3) try 'Focus under mouse' as window behavior (No mouse click when the mouse
    pointer is back from the menu entry).

(4) Use Emulate3Buttons "on" (X11) even for a 3-button mouse. Pressing left and
    right button simultaneously without moving your fingers is faster then
    moving a finger to the middle button (often a wheel).

=======================================================================================
