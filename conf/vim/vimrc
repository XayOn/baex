" Set runtime stuffs, change it to use stuff in .codenv
runtime! macros/matchit.vim

let g:tracServerList={}

"------------ Paths -------------
set runtimepath=~/.codenv/vim,~/.codenv/vim/after,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim72,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after

let g:plugin_ldir = $HOME."/.vim/"
let g:plugin_dir = $HOME."/.vim/"

"..............
set nocompatible " No compatible with vim
set nobackup " Dont save backup

"...............
set backspace=indent,eol,start
set history=50
set ruler
set autoindent
set mouse=a
set title
set background=dark
set hidden
set cindent
set number

" ................
set showcmd
set incsearch
set isfname=@,48-57,/,.,-,_,+,,,#,$,%,~,=,:
set helplang=es
set comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
set tags+=~/.vim/tags/cpp
set foldclose=all
set incsearch

" ................
set showmatch
set ignorecase
set smartcase
set incsearch
set autowrite

" --- Tabulation stuff ---
set tabstop=4
set shiftwidth=4
set shiftround
set expandtab
"  -----------------------
set scrolloff=8
set laststatus=2

"colorscheme vividchalk
"colorscheme obsidian2
colorscheme desert256

"# Html use css, for exports
let html_use_css = 1

" Sintax highligting and search hl and so.
syntax on
set syntax=auto
set hlsearch

" Filetype plugin
filetype plugin indent on
filetype plugin on

" Highlight useless whitespace
highlight RedundantWhitespace ctermbg=red guibg=red
match RedundantWhitespace /\s\+$\| \+\ze\t/

" Better autocomplete menu
au CursorMovedI,InsertLeave * if pumvisible() == 0|silent! pclose|endif
set completeopt=menuone,menu,longest,preview

"# Mutt!
au BufRead /tmp/mutt* normal :g/^> -- $/,/^$/-1d^M/^$^M^L

"# NerdTree things
let NERDTreeIgnore = ['\.pyc$','\.swp$','\.o$']
let NERDTreeMouseMode = 3 "single-click to open files/nodes
let NERDTreeWinPos = 'left'
let NERDTreeSplitVertical = 1 "and open as vsplit
let NERDTreeChDirMode = 2 "change working dir when I change root
let NERDTreeShowBookmarks = 1

"# SnippetsEmu
ino <tab> <c-r>=TriggerSnippet()<cr>
snor <tab> <esc>i<right><c-r>=TriggerSnippet()<cr>

" # For php using VIP
inoremap <C-P> :call PhpDocSingle()<CR>i
nnoremap <C-P> :call PhpDocSingle()<CR>
vnoremap <C-P> :call PhpDocRange()<CR>
au BufRead,BufNewFile *.phps                set filetype=php
au BufNewFile,BufRead *.timelog 	set ft=timelog


